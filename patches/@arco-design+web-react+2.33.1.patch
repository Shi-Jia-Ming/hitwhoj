diff --git a/node_modules/@arco-design/web-react/es/Tabs/tabs.js b/node_modules/@arco-design/web-react/es/Tabs/tabs.js
index 7dcf5a4..57c4f3d 100644
--- a/node_modules/@arco-design/web-react/es/Tabs/tabs.js
+++ b/node_modules/@arco-design/web-react/es/Tabs/tabs.js
@@ -47,7 +47,6 @@ import { isFunction, isObject } from '../_util/is';
 import useMergeValue from '../_util/hooks/useMergeValue';
 import useMergeProps from '../_util/hooks/useMergeProps';
 var sizeList = ['mini', 'small', 'default', 'large'];
-var __ARCO_TABS_SEED_INDEX = 0;
 var getPaneChildren = function (props) {
     var children = props.children;
     var paneChildren = [];
@@ -92,7 +91,7 @@ function Tabs(baseProps, ref) {
     var size = props.size || (sizeList.indexOf(ctxSize) > -1 ? ctxSize : 'default');
     var animation = props.animation, className = props.className, direction = props.direction, style = props.style, type = props.type, justify = props.justify, destroyOnHide = props.destroyOnHide, lazyload = props.lazyload, onChange = props.onChange, onClickTab = props.onClickTab, onDeleteTab = props.onDeleteTab, renderTabHeader = props.renderTabHeader, rest = __rest(props, ["animation", "className", "direction", "style", "type", "justify", "destroyOnHide", "lazyload", "onChange", "onClickTab", "onDeleteTab", "renderTabHeader"]);
     var idPrefix = useMemo(function () {
-        return prefixCls + "-" + __ARCO_TABS_SEED_INDEX++ + "-";
+        return prefixCls + "-";
     }, []);
     var tabPosition = direction === 'vertical' ? 'left' : props.tabPosition;
     var tabHeaderProps = {
diff --git a/node_modules/@arco-design/web-react/lib/Tabs/tabs.js b/node_modules/@arco-design/web-react/lib/Tabs/tabs.js
index ba41ed7..84a8c0a 100644
--- a/node_modules/@arco-design/web-react/lib/Tabs/tabs.js
+++ b/node_modules/@arco-design/web-react/lib/Tabs/tabs.js
@@ -72,7 +72,6 @@ var is_1 = require("../_util/is");
 var useMergeValue_1 = __importDefault(require("../_util/hooks/useMergeValue"));
 var useMergeProps_1 = __importDefault(require("../_util/hooks/useMergeProps"));
 var sizeList = ['mini', 'small', 'default', 'large'];
-var __ARCO_TABS_SEED_INDEX = 0;
 var getPaneChildren = function (props) {
     var children = props.children;
     var paneChildren = [];
@@ -117,7 +116,7 @@ function Tabs(baseProps, ref) {
     var size = props.size || (sizeList.indexOf(ctxSize) > -1 ? ctxSize : 'default');
     var animation = props.animation, className = props.className, direction = props.direction, style = props.style, type = props.type, justify = props.justify, destroyOnHide = props.destroyOnHide, lazyload = props.lazyload, onChange = props.onChange, onClickTab = props.onClickTab, onDeleteTab = props.onDeleteTab, renderTabHeader = props.renderTabHeader, rest = __rest(props, ["animation", "className", "direction", "style", "type", "justify", "destroyOnHide", "lazyload", "onChange", "onClickTab", "onDeleteTab", "renderTabHeader"]);
     var idPrefix = (0, react_1.useMemo)(function () {
-        return prefixCls + "-" + __ARCO_TABS_SEED_INDEX++ + "-";
+        return prefixCls + "-";
     }, []);
     var tabPosition = direction === 'vertical' ? 'left' : props.tabPosition;
     var tabHeaderProps = {
